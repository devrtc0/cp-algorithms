<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>Algorithms for Competitive Programming</title><description>The goal of this project is to translate the wonderful resource http://e-maxx.ru/algo which provides descriptions of many algorithms and data structures especially popular in field of competitive programming. Moreover we want to improve the collected knowledge by extending the articles and adding new articles to the collection.</description><link>https://cp-algorithms.com/</link><atom:link href="https://cp-algorithms.com/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/cp-algorithms/cp-algorithms</docs><language>en</language> <pubDate>Sat, 23 Nov 2024 15:09:09 -0000</pubDate> <lastBuildDate>Sat, 23 Nov 2024 15:09:09 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.15.0</generator> <item> <title>Topological Sorting</title> <description>&lt;h1&gt;Topological Sorting&lt;/h1&gt;&lt;p&gt;You are given a directed graph with $n$ vertices and $m$ edges.You have to find an &lt;strong&gt;order of the vertices&lt;/strong&gt;, so that every edge lead...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/topological-sort.html</link> <pubDate>Wed, 20 Nov 2024 15:22:50 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/topological-sort.html</guid> </item> <item> <title>Suffix Automaton</title> <description>&lt;h1&gt;Suffix Automaton&lt;/h1&gt;&lt;p&gt;A &lt;strong&gt;suffix automaton&lt;/strong&gt; is a powerful data structure that allows solving many string-related problems. &lt;/p&gt;&lt;p&gt;For example, you can search for a...&lt;/p&gt;</description><link>https://cp-algorithms.com/string/suffix-automaton.html</link> <pubDate>Fri, 08 Nov 2024 19:11:20 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/string/suffix-automaton.html</guid> </item> <item> <title>Knapsack Problem</title> <description>&lt;h1&gt;Knapsack Problem&lt;/h1&gt;&lt;p&gt;Prerequisite knowledge: &lt;a href=&#34;https://cp-algorithms.com/dynamic_programming/intro-to-dp.html&#34;&gt;Introduction to Dynamic Programming&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;Introduc...&lt;/h2&gt;</description><link>https://cp-algorithms.com/dynamic_programming/knapsack.html</link> <pubDate>Thu, 31 Oct 2024 17:00:30 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/dynamic_programming/knapsack.html</guid> </item> <item> <title>Introduction to Dynamic Programming</title> <description>&lt;h1&gt;Introduction to Dynamic Programming&lt;/h1&gt;&lt;p&gt;The essence of dynamic programming is to avoid repeated calculation. Often, dynamic programming problems are naturall...&lt;/p&gt;</description><link>https://cp-algorithms.com/dynamic_programming/intro-to-dp.html</link> <pubDate>Thu, 24 Oct 2024 15:02:51 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/dynamic_programming/intro-to-dp.html</guid> </item> <item> <title>Finding faces of a planar graph</title> <description>&lt;h1&gt;Finding faces of a planar graph&lt;/h1&gt;&lt;p&gt;Consider a graph $G$ with $n$ vertices and $m$ edges, which can be drawn on a plane in such a way that two edges intersect...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/planar.html</link> <pubDate>Wed, 23 Oct 2024 02:39:29 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/planar.html</guid> </item> <item> <title>Binomial Coefficients</title> <description>&lt;h1&gt;Binomial Coefficients&lt;/h1&gt;&lt;p&gt;Binomial coefficients $\binom n k$ are the number of ways to select a set of $k$ elements from $n$ different elements without taking...&lt;/p&gt;</description><link>https://cp-algorithms.com/combinatorics/binomial-coefficients.html</link> <pubDate>Tue, 22 Oct 2024 23:31:25 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/combinatorics/binomial-coefficients.html</guid> </item> <item> <title>The Inclusion-Exclusion Principle</title> <description>&lt;h1&gt;The Inclusion-Exclusion Principle&lt;/h1&gt;&lt;p&gt;The inclusion-exclusion principle is an important combinatorial way to compute the size of a set or the probability of c...&lt;/p&gt;</description><link>https://cp-algorithms.com/combinatorics/inclusion-exclusion.html</link> <pubDate>Tue, 22 Oct 2024 23:31:25 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/combinatorics/inclusion-exclusion.html</guid> </item> <item> <title>Strongly Connected Components and Condensation Graph</title> <description>&lt;h1&gt;Strongly connected components and the condensation graph&lt;/h1&gt;&lt;h2&gt;Definitions&lt;/h2&gt;&lt;p&gt;Let $G=(V,E)$ be a directed graph with vertices $V$ and edges $E \subseteq V \time...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/strongly-connected-components.html</link> <pubDate>Tue, 22 Oct 2024 23:31:25 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/strongly-connected-components.html</guid> </item> <item> <title>Finding the nearest pair of points</title> <description>&lt;h1&gt;Finding the nearest pair of points&lt;/h1&gt;&lt;h2&gt;Problem statement&lt;/h2&gt;&lt;p&gt;Given $n$ points on the plane. Each point $p_i$ is defined by its coordinates $(x_i,y_i)$. It is ...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/nearest_points.html</link> <pubDate>Tue, 22 Oct 2024 23:26:15 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/nearest_points.html</guid> </item> <item> <title>K-th order statistic in O(N)</title> <description>&lt;h1&gt;$K$th order statistic in $O(N)$&lt;/h1&gt;&lt;p&gt;Given an array $A$ of size $N$ and a number $K$. The problem is to find $K$-th largest number in the array, i.e., $K$-th o...&lt;/p&gt;</description><link>https://cp-algorithms.com/sequences/k-th.html</link> <pubDate>Sun, 20 Oct 2024 18:33:37 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/sequences/k-th.html</guid> </item> <item> <title>Euclidean algorithm for computing the greatest common divisor</title> <description>&lt;h1&gt;Euclidean algorithm for computing the greatest common divisor&lt;/h1&gt;&lt;p&gt;Given two non-negative integers $a$ and $b$, we have to find their &lt;strong&gt;GCD&lt;/strong&gt; (greatest common ...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/euclid-algorithm.html</link> <pubDate>Tue, 15 Oct 2024 10:56:28 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/euclid-algorithm.html</guid> </item> <item> <title>Linear Diophantine Equations</title> <description>&lt;h1&gt;Linear Diophantine Equation&lt;/h1&gt;&lt;p&gt;A Linear Diophantine Equation (in two variables) is an equation of the general form:&lt;/p&gt;&lt;p&gt;$$ax + by = c$$&lt;/p&gt;&lt;p&gt;where $a$, $b$, $c$ are...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/linear-diophantine-equation.html</link> <pubDate>Tue, 15 Oct 2024 09:57:28 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/linear-diophantine-equation.html</guid> </item> <item> <title>Maximum flow - Dinic&#39;s algorithm</title> <description>&lt;h1&gt;Maximum flow - Dinic&#39;s algorithm&lt;/h1&gt;&lt;p&gt;Dinic&#39;s algorithm solves the maximum flow problem in $O(V^2E)$. The maximum flow problem is defined in this article [Maxi...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/dinic.html</link> <pubDate>Tue, 15 Oct 2024 09:40:14 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/dinic.html</guid> </item> <item> <title>Finding a Negative Cycle in the Graph</title> <description>&lt;h1&gt;Finding a negative cycle in the graph&lt;/h1&gt;&lt;p&gt;You are given a directed weighted graph $G$ with $N$ vertices and $M$ edges. Find any cycle of negative weight in it...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/finding-negative-cycle-in-graph.html</link> <pubDate>Mon, 14 Oct 2024 07:14:57 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/finding-negative-cycle-in-graph.html</guid> </item> <item> <title>Convex hull construction</title> <description>&lt;h1&gt;Convex Hull construction&lt;/h1&gt;&lt;p&gt;In this article we will discuss the problem of constructing a convex hull from a set of points.&lt;/p&gt;&lt;p&gt;Consider $N$ points given on a p...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/convex-hull.html</link> <pubDate>Sun, 13 Oct 2024 23:38:15 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/convex-hull.html</guid> </item> <item> <title>Integration by Simpson&#39;s formula</title> <description>&lt;h1&gt;Integration by Simpson&#39;s formula&lt;/h1&gt;&lt;p&gt;We are going to calculate the value of a definite integral&lt;/p&gt;&lt;p&gt;$$\int_a ^ b f (x) dx$$&lt;/p&gt;&lt;p&gt;The solution described here was publ...&lt;/p&gt;</description><link>https://cp-algorithms.com/num_methods/simpson-integration.html</link> <pubDate>Sun, 13 Oct 2024 23:38:15 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/num_methods/simpson-integration.html</guid> </item> <item> <title>Maximum flow - Ford-Fulkerson and Edmonds-Karp</title> <description>&lt;h1&gt;Maximum flow - Ford-Fulkerson and Edmonds-Karp&lt;/h1&gt;&lt;p&gt;The Edmonds-Karp algorithm is an implementation of the Ford-Fulkerson method for computing a maximal flow i...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/edmonds_karp.html</link> <pubDate>Sun, 13 Oct 2024 09:24:36 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/edmonds_karp.html</guid> </item> <item> <title>Breadth First Search</title> <description>&lt;h1&gt;Breadth-first search&lt;/h1&gt;&lt;p&gt;Breadth first search is one of the basic and essential searching algorithms on graphs.&lt;/p&gt;&lt;p&gt;As a result of how the algorithm works, the p...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/breadth-first-search.html</link> <pubDate>Sun, 13 Oct 2024 09:02:39 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/breadth-first-search.html</guid> </item> <item> <title>Manhattan Distance</title> <description>&lt;h1&gt;Manhattan Distance&lt;/h1&gt;&lt;h2&gt;Definition&lt;/h2&gt;&lt;p&gt;For points $p$ and $q$ on a plane, we can define the distance between them as the sum of the differences between their $...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/manhattan-distance.html</link> <pubDate>Sat, 12 Oct 2024 14:55:01 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/manhattan-distance.html</guid> </item> <item> <title>Disjoint Set Union</title> <description>&lt;h1&gt;Disjoint Set Union&lt;/h1&gt;&lt;p&gt;This article discusses the data structure &lt;strong&gt;Disjoint Set Union&lt;/strong&gt; or &lt;strong&gt;DSU&lt;/strong&gt;.Often it is also called &lt;strong&gt;Union Find&lt;/strong&gt; because of its two ...&lt;/p&gt;</description><link>https://cp-algorithms.com/data_structures/disjoint_set_union.html</link> <pubDate>Sat, 12 Oct 2024 10:13:20 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/data_structures/disjoint_set_union.html</guid> </item> </channel></rss>