<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>Algorithms for Competitive Programming</title><description>The goal of this project is to translate the wonderful resource http://e-maxx.ru/algo which provides descriptions of many algorithms and data structures especially popular in field of competitive programming. Moreover we want to improve the collected knowledge by extending the articles and adding new articles to the collection.</description><link>https://cp-algorithms.com/</link><atom:link href="https://cp-algorithms.com/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/cp-algorithms/cp-algorithms</docs><language>en</language> <pubDate>Fri, 09 May 2025 11:18:34 -0000</pubDate> <lastBuildDate>Fri, 09 May 2025 11:18:34 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.17.1</generator> <image> <url>None</url> <title>Algorithms for Competitive Programming</title><link>https://cp-algorithms.com/</link> </image> <item> <title>Number of paths of fixed length / Shortest paths of fixed length</title> <description>&lt;h1&gt;Number of paths of fixed length / Shortest paths of fixed length&lt;/h1&gt;&lt;p&gt;The following article describes solutions to these two problems built on the same idea:r...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/fixed_length_paths.html</link> <pubDate>Fri, 02 May 2025 18:37:17 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/fixed_length_paths.html</guid> </item> <item> <title>Fibonacci Numbers</title> <description>&lt;h1&gt;Fibonacci Numbers&lt;/h1&gt;&lt;p&gt;The Fibonacci sequence is defined as follows:&lt;/p&gt;&lt;p&gt;$$F_0 = 0, F_1 = 1, F_n = F_{n-1} + F_{n-2}$$&lt;/p&gt;&lt;p&gt;The first elements of the sequence ([OEIS ...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/fibonacci-numbers.html</link> <pubDate>Tue, 22 Apr 2025 03:58:03 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/fibonacci-numbers.html</guid> </item> <item> <title>Maximum flow - Ford-Fulkerson and Edmonds-Karp</title> <description>&lt;h1&gt;Maximum flow - Ford-Fulkerson and Edmonds-Karp&lt;/h1&gt;&lt;p&gt;The Edmonds-Karp algorithm is an implementation of the Ford-Fulkerson method for computing a maximal flow i...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/edmonds_karp.html</link> <pubDate>Tue, 22 Apr 2025 02:45:52 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/edmonds_karp.html</guid> </item> <item> <title>Second best Minimum Spanning Tree - Using Kruskal and Lowest Common Ancestor</title> <description>&lt;h1&gt;Second Best Minimum Spanning Tree&lt;/h1&gt;&lt;p&gt;A Minimum Spanning Tree $T$ is a tree for the given graph $G$ which spans over all vertices of the given graph and has t...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/second_best_mst.html</link> <pubDate>Tue, 22 Apr 2025 02:26:46 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/second_best_mst.html</guid> </item> <item> <title>Topological Sorting</title> <description>&lt;h1&gt;Topological Sorting&lt;/h1&gt;&lt;p&gt;You are given a directed graph with $n$ vertices and $m$ edges.You have to find an &lt;strong&gt;order of the vertices&lt;/strong&gt;, so that every edge lead...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/topological-sort.html</link> <pubDate>Tue, 22 Apr 2025 02:26:46 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/topological-sort.html</guid> </item> <item> <title>Minimum Spanning Tree - Prim&#39;s Algorithm</title> <description>&lt;h1&gt;Minimum spanning tree - Prim&#39;s algorithm&lt;/h1&gt;&lt;p&gt;Given a weighted, undirected graph $G$ with $n$ vertices and $m$ edges.You want to find a spanning tree of this ...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/mst_prim.html</link> <pubDate>Tue, 22 Apr 2025 02:22:24 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/mst_prim.html</guid> </item> <item> <title>Manhattan Distance</title> <description>&lt;h1&gt;Manhattan Distance&lt;/h1&gt;&lt;h2&gt;Definition&lt;/h2&gt;&lt;p&gt;For points $p$ and $q$ on a plane, we can define the distance between them as the sum of the differences between their $...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/manhattan-distance.html</link> <pubDate>Tue, 22 Apr 2025 02:11:52 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/manhattan-distance.html</guid> </item> <item> <title>Aho-Corasick algorithm</title> <description>&lt;h1&gt;Aho-Corasick algorithm&lt;/h1&gt;&lt;p&gt;The Aho-Corasick algorithm allows us to quickly search for multiple patterns in a text.The set of pattern strings is also called a...&lt;/p&gt;</description><link>https://cp-algorithms.com/string/aho_corasick.html</link> <pubDate>Fri, 18 Apr 2025 21:47:45 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/string/aho_corasick.html</guid> </item> <item> <title>Finding a Negative Cycle in the Graph</title> <description>&lt;h1&gt;Finding a negative cycle in the graph&lt;/h1&gt;&lt;p&gt;You are given a directed weighted graph $G$ with $N$ vertices and $M$ edges. Find any cycle of negative weight in it...&lt;/p&gt;</description><link>https://cp-algorithms.com/graph/finding-negative-cycle-in-graph.html</link> <pubDate>Wed, 16 Apr 2025 00:46:24 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/graph/finding-negative-cycle-in-graph.html</guid> </item> <item> <title>K-th order statistic in O(N)</title> <description>&lt;h1&gt;$K$th order statistic in $O(N)$&lt;/h1&gt;&lt;p&gt;Given an array $A$ of size $N$ and a number $K$. The problem is to find $K$-th largest number in the array, i.e., $K$-th o...&lt;/p&gt;</description><link>https://cp-algorithms.com/sequences/k-th.html</link> <pubDate>Wed, 16 Apr 2025 00:31:59 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/sequences/k-th.html</guid> </item> <item> <title>Integer factorization</title> <description>&lt;h1&gt;Integer factorization&lt;/h1&gt;&lt;p&gt;In this article we list several algorithms for the factorization of integers, each of which can be either fast or varying levels of ...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/factorization.html</link> <pubDate>Tue, 15 Apr 2025 02:32:08 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/factorization.html</guid> </item> <item> <title>Sieve of Eratosthenes</title> <description>&lt;h1&gt;Sieve of Eratosthenes&lt;/h1&gt;&lt;p&gt;Sieve of Eratosthenes is an algorithm for finding all the prime numbers in a segment $[1;n]$ using $O(n \log \log n)$ operations.&lt;/p&gt;&lt;p&gt;T...&lt;/p&gt;</description><link>https://cp-algorithms.com/algebra/sieve-of-eratosthenes.html</link> <pubDate>Tue, 15 Apr 2025 02:32:08 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/algebra/sieve-of-eratosthenes.html</guid> </item> <item> <title>Fenwick Tree</title> <description>&lt;h1&gt;Fenwick Tree&lt;/h1&gt;&lt;p&gt;Let $f$ be some group operation (a binary associative function over a set with an identity element and inverse elements) and $A$ be an array ...&lt;/p&gt;</description><link>https://cp-algorithms.com/data_structures/fenwick.html</link> <pubDate>Tue, 15 Apr 2025 02:32:08 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/data_structures/fenwick.html</guid> </item> <item> <title>Basic Geometry</title> <description>&lt;h1&gt;Basic Geometry&lt;/h1&gt;&lt;p&gt;In this article we will consider basic operations on points in Euclidean space which maintains the foundation of the whole analytical geome...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/basic-geometry.html</link> <pubDate>Tue, 15 Apr 2025 02:32:08 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/basic-geometry.html</guid> </item> <item> <title>Convex hull trick and Li Chao tree</title> <description>&lt;h1&gt;Convex hull trick and Li Chao tree&lt;/h1&gt;&lt;p&gt;Consider the following problem. There are $n$ cities. You want to travel from city $1$ to city $n$ by car. To do this y...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/convex_hull_trick.html</link> <pubDate>Tue, 15 Apr 2025 02:32:08 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/convex_hull_trick.html</guid> </item> <item> <title>Delaunay triangulation and Voronoi diagram</title> <description>&lt;h1&gt;Delaunay triangulation and Voronoi diagram&lt;/h1&gt;&lt;p&gt;Consider a set ${p_i}$ of points on the plane.A &lt;strong&gt;Voronoi diagram&lt;/strong&gt; $V({p_i})$ of ${p_i}$ is a partition...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/delaunay.html</link> <pubDate>Tue, 15 Apr 2025 02:32:08 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/delaunay.html</guid> </item> <item> <title>Search for a pair of intersecting segments</title> <description>&lt;h1&gt;Search for a pair of intersecting segments&lt;/h1&gt;&lt;p&gt;Given $n$ line segments on the plane. It is required to check whether at least two of them intersect with each ...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/intersecting_segments.html</link> <pubDate>Tue, 15 Apr 2025 02:32:08 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/intersecting_segments.html</guid> </item> <item> <title>Lattice points of non-lattice polygon</title> <description>&lt;h1&gt;Lattice points inside non-lattice polygon&lt;/h1&gt;&lt;p&gt;For lattice polygons there is Pick&#39;s formula to enumerate the lattice points inside the polygon.What about poly...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/lattice-points.html</link> <pubDate>Tue, 15 Apr 2025 02:32:08 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/lattice-points.html</guid> </item> <item> <title>Minkowski sum of convex polygons</title> <description>&lt;h1&gt;Minkowski sum of convex polygons&lt;/h1&gt;&lt;h2&gt;Definition&lt;/h2&gt;&lt;p&gt;Consider two sets $A$ and $B$ of points on a plane. Minkowski sum $A + B$ is defined as ${a + b| a \in A, ...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/minkowski.html</link> <pubDate>Tue, 15 Apr 2025 02:32:08 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/minkowski.html</guid> </item> <item> <title>Finding faces of a planar graph</title> <description>&lt;h1&gt;Finding faces of a planar graph&lt;/h1&gt;&lt;p&gt;Consider a graph $G$ with $n$ vertices and $m$ edges, which can be drawn on a plane in such a way that two edges intersect...&lt;/p&gt;</description><link>https://cp-algorithms.com/geometry/planar.html</link> <pubDate>Tue, 15 Apr 2025 02:32:08 +0000</pubDate><source url="https://cp-algorithms.com/feed_rss_updated.xml">Algorithms for Competitive Programming</source><guid isPermaLink="true">https://cp-algorithms.com/geometry/planar.html</guid> </item> </channel></rss>